function EventEmitter(){}EventEmitter.prototype.events={},EventEmitter.prototype.eventsWillBeFiredOnce={},EventEmitter.prototype.isObject=function(a){return"[object Object]"===Object.prototype.toString.call(a)},EventEmitter.prototype.on=function(a,b,c=null){if("function"!=typeof b||"string"!=typeof a)return!1;this.events.hasOwnProperty(a)||(this.events[a]=[]),this.eventsWillBeFiredOnce.hasOwnProperty(a)||(this.eventsWillBeFiredOnce[a]=[]);const d=this.isObject(c)?c:{once:!1},e=this.events[a].push(b);return d.once&&!0===d.once&&this.eventsWillBeFiredOnce[a].push(e-1),!0},EventEmitter.prototype.once=function(a,b){this.on(a,b,{once:!0})},EventEmitter.prototype.emit=function(a,b=[]){if(!this.events.hasOwnProperty(a)){if("error"==a){const a=b instanceof Error?b:new Error("Unhandled error.");throw a}return!1}const c=Array.isArray(b)?b:[b];for(let d=0;d<this.events[a].length;d++)this.events[a][d].apply(this,c);if(this.eventsWillBeFiredOnce.hasOwnProperty(a))for(var d=0;d<this.eventsWillBeFiredOnce[a].length;d++)this.removeListener(a,this.eventsWillBeFiredOnce[a][d]);return!0},EventEmitter.prototype.removeListener=function(a,b){this.events[a].splice(b,1)},EventEmitter.prototype.removeListeners=function(a){return!("string"!=typeof a)&&!!this.events.hasOwnProperty(a)&&(this.events[a]=[],this.eventsWillBeFiredOnce.hasOwnProperty(a)&&(this.eventsWillBeFiredOnce[a]=[]),!0)},EventEmitter.prototype.flush=function(){this.events={},this.eventsWillBeFiredOnce={}},module.exports=EventEmitter;